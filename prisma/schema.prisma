// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  role          UserRole  @default(CONSULTANT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  consultant    Consultant?
  leads         Lead[]
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Consultant {
  id            String    @id @default(cuid())
  userId        String    @unique
  name          String
  logo          String?
  profilePhoto  String?
  description   String
  shortDescription String?
  website       String?
  email         String
  phone         String?
  region        String
  industries    String[] // Array of industry strings
  services      String[] // Array of service strings
  hourlyRate    Int?      // Hourly rate in pence (e.g., 10000 = Â£100/hr)
  projectRateMin Int?     // Minimum project rate in pence
  projectRateMax Int?     // Maximum project rate in pence
  showRates     Boolean   @default(false) // Whether to show rates publicly
  isPremium     Boolean   @default(false)
  isApproved    Boolean   @default(false)
  isFeatured    Boolean   @default(false)
  stripeCustomerId String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  leads         Lead[]
  payments      Payment[]
  testimonials  Testimonial[]
  portfolioItems PortfolioItem[]
  caseStudies   CaseStudy[]
  ratings       Rating[]

  @@map("consultants")
}

model Lead {
  id            String    @id @default(cuid())
  consultantId  String
  userId        String?
  name          String
  email         String
  company       String?
  message       String
  status        LeadStatus @default(NEW)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  consultant    Consultant @relation(fields: [consultantId], references: [id], onDelete: Cascade)
  user          User?     @relation(fields: [userId], references: [id])

  @@map("leads")
}

model Payment {
  id                String    @id @default(cuid())
  consultantId      String
  stripeSessionId   String?   @unique
  stripePaymentId   String?   @unique
  amount            Int       // Amount in cents
  currency          String    @default("usd")
  status            PaymentStatus @default(PENDING)
  type              PaymentType
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  // Relations
  consultant        Consultant @relation(fields: [consultantId], references: [id], onDelete: Cascade)

  @@map("payments")
}

model Testimonial {
  id            String    @id @default(cuid())
  consultantId  String
  clientName    String
  clientTitle   String?
  clientCompany String?
  content       String
  rating        Int       @default(5)
  isApproved    Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  consultant    Consultant @relation(fields: [consultantId], references: [id], onDelete: Cascade)

  @@map("testimonials")
}

model PortfolioItem {
  id            String    @id @default(cuid())
  consultantId  String
  title         String
  description   String
  metrics       String?   // e.g., "30% cost reduction", "10k concurrent users"
  technologies  String[]  // Array of technology strings
  projectType   String?   // e.g., "SaaS Platform", "AI Implementation"
  clientType    String?   // e.g., "Healthcare Startup", "Fortune 500"
  duration      String?   // e.g., "3 months", "6 weeks"
  imageUrl      String?
  projectUrl    String?   // Link to live project (if public)
  caseStudyUrl  String?   // Link to detailed case study
  isPublic      Boolean   @default(true)
  displayOrder  Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  consultant    Consultant @relation(fields: [consultantId], references: [id], onDelete: Cascade)

  @@map("portfolio_items")
}

enum UserRole {
  CONSULTANT
  ADMIN
}

enum ServiceType {
  SAAS
  AI
  BOTH
}

enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  CONVERTED
  CLOSED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum PaymentType {
  PREMIUM_LISTING
  LEAD_ACCESS
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model CaseStudy {
  id            String    @id @default(cuid())
  consultantId  String
  title         String
  description   String
  challenge     String    // What was the challenge/problem
  solution      String    // How it was solved
  results       String    // What were the results
  technologies  String[]  // Technologies used
  industry      String?
  clientSize    String?   // e.g., "Startup", "Enterprise"
  duration      String?   // e.g., "3 months"
  budget        String?   // e.g., "$50k-100k" or "Confidential"
  attachments   String[]  // Array of file URLs
  isPublic      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  consultant    Consultant @relation(fields: [consultantId], references: [id], onDelete: Cascade)

  @@map("case_studies")
}

model Rating {
  id            String    @id @default(cuid())
  consultantId  String
  clientName    String
  clientEmail   String?
  rating        Int       // 1-5 stars
  review        String?   // Optional written review
  categories    Json      // JSON object with category ratings (e.g., {"communication": 5, "delivery": 4, "value": 5})
  isVerified    Boolean   @default(false) // Whether the rating is verified
  isPublic      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  consultant    Consultant @relation(fields: [consultantId], references: [id], onDelete: Cascade)

  @@map("ratings")
}
